Перем КонтекстЯдра;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем УтвержденияПроверкаТаблиц;
Перем Ожидаем;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
    КонтекстЯдра = КонтекстЯдраПараметр;
    //Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
    //ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
    //УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить("ТестДолжен_СоздатьЗаписьВРегистрАдресации");
	НаборТестов.Добавить("ТестДолжен_СоздатьПредметСогласования");
    НаборТестов.Добавить("ТестДолжен_СоздатьЗадачу");
	НаборТестов.Добавить("ТестДолжен_ПровестиРегистрациюСтатусаОбъекта");
КонецПроцедуры

Процедура ТестДолжен_СоздатьЗаписьВРегистрАдресации() Экспорт
	НачатьТранзакцию();
	РолиАдресации_ОсновнаяРоль = Справочники.бпсРолиАдресации.ОсновнаяРоль;
	ПодразделенияАдресации_ВсяФирма = Справочники.бпсПодразделенияАдресации.ВсяФирма;
	
	
	НаборЗаписей=РегистрыСведений.бпсРегистрАдресации.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийПользователь);
	НаборЗаписей.Отбор.РольАдресации.Установить(РолиАдресации_ОсновнаяРоль);
	НаборЗаписей.Отбор.ПодразделениеАдресации.Установить(ПодразделенияАдресации_ВсяФирма);
	Запись=НаборЗаписей.Добавить();
	Запись.Пользователь=ПараметрыСеанса.ТекущийПользователь;
	Запись.РольАдресации=РолиАдресации_ОсновнаяРоль;
	Запись.ПодразделениеАдресации=ПодразделенияАдресации_ВсяФирма;
	НаборЗаписей.Записать();

	НаборЗаписей.Прочитать();
	ТекстТеста = "";
	Ожидаем.Что(НаборЗаписей.Количество(),ТекстТеста).Равно(1);
	ОтменитьТранзакцию();
КонецПроцедуры

Процедура ТестДолжен_СоздатьЗадачу() Экспорт
	НачатьТранзакцию();
	РолиАдресации_ОсновнаяРоль = Справочники.бпсРолиАдресации.ОсновнаяРоль;
	ПодразделенияАдресации_ВсяФирма = Справочники.бпсПодразделенияАдресации.ВсяФирма;
	
	ЗадачаОбъект = Задачи.бпсЗадача.СоздатьЗадачу();
	ЗадачаОбъект.Дата = ТекущаяДата();
	ЗадачаОбъект.РольАдресации = РолиАдресации_ОсновнаяРоль;
	ЗадачаОбъект.ПодразделениеАдресации = ПодразделенияАдресации_ВсяФирма;
	ЗадачаОбъект.Наименование = "Тест задачи";
	ЗадачаОбъект.Записать();
	
	НаборЗаписей=РегистрыСведений.бпсРегистрАдресации.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийПользователь);
	НаборЗаписей.Отбор.РольАдресации.Установить(РолиАдресации_ОсновнаяРоль);
	НаборЗаписей.Отбор.ПодразделениеАдресации.Установить(ПодразделенияАдресации_ВсяФирма);
	Запись=НаборЗаписей.Добавить();
	Запись.Пользователь=ПараметрыСеанса.ТекущийПользователь;
	Запись.РольАдресации=РолиАдресации_ОсновнаяРоль;
	Запись.ПодразделениеАдресации=ПодразделенияАдресации_ВсяФирма;
	НаборЗаписей.Записать();

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бпсЗадачаЗадачиПоИсполнителю.Ссылка
	|ИЗ
	|	Задача.бпсЗадача.ЗадачиПоИсполнителю(&ТекущийПользователь, ) КАК бпсЗадачаЗадачиПоИсполнителю
	|ГДЕ
	|	бпсЗадачаЗадачиПоИсполнителю.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Ссылка", ЗадачаОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//Утверждения.ПроверитьРавенство(2 + 2, 4, "2 + 2, 4");
	Ожидаем.Что(РезультатЗапроса.Пустой(), "Есть задача для пользователя").Не_().ЭтоИстина();
	ОтменитьТранзакцию();
КонецПроцедуры

Процедура ТестДолжен_СоздатьПредметСогласования() Экспорт
	НачатьТранзакцию();
	пОбъектСогласования = Справочники.бпсПодразделенияАдресации.ВсяФирма;
	
	ПредметСогласованияОбъект = Справочники.бпсПредметыСогласований.СоздатьЭлемент();
	ПредметСогласованияОбъект.Наименование = "Согласуем подразделение";
	ПредметСогласованияОбъект.Записать();
	пПредметСогласования = ПредметСогласованияОбъект.Ссылка;
	
	ТекстТеста = "Создали предмет согласования [Согласуем подразделение]";
	Ожидаем.Что(пПредметСогласования,ТекстТеста).Существует();
	
	ОтменитьТранзакцию();	
КонецПроцедуры

Процедура ТестДолжен_ПровестиРегистрациюСтатусаОбъекта() Экспорт
	НачатьТранзакцию();
	пОбъектСогласования = Справочники.бпсПодразделенияАдресации.ВсяФирма;
	СтатусыСогласования_ВозвращеноНаДоработку = Справочники.бпсСтатусыСогласования.ВозвращеноНаДоработку;
	
	ПредметСогласованияОбъект = Справочники.бпсПредметыСогласований.СоздатьЭлемент();
	ПредметСогласованияОбъект.Наименование = "Согласуем подразделение";
	ПредметСогласованияОбъект.Записать();
	пПредметСогласования = ПредметСогласованияОбъект.Ссылка;
		
	ДокОбъект = Документы.бпсРегистрацияСтатусаСогласования.СоздатьДокумент();
	ДокОбъект.Дата = ТекущаяДата();
	ДокОбъект.ОбъектСогласования = пОбъектСогласования;
	ДокОбъект.ПредметСогласования = пПредметСогласования;
	ДокОбъект.СтатусСогласования = СтатусыСогласования_ВозвращеноНаДоработку;
	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	бпсСтатусыСогласованийСрезПоследних.ОбъектСогласования,
		|	бпсСтатусыСогласованийСрезПоследних.СтатусСогласования
		|ИЗ
		|	РегистрСведений.бпсСтатусыСогласований.СрезПоследних(
		|			&МоментВремени,
		|			ОбъектСогласования = &ОбъектСогласования
		|				И ПредметСогласования = &ПредметСогласования) КАК бпсСтатусыСогласованийСрезПоследних
		|ГДЕ
		|	бпсСтатусыСогласованийСрезПоследних.СтатусСогласования = &СтатусСогласования";
	
	Запрос.УстановитьПараметр("МоментВремени", ДокОбъект.МоментВремени());
	Запрос.УстановитьПараметр("ОбъектСогласования", пОбъектСогласования);
	Запрос.УстановитьПараметр("ПредметСогласования", пПредметСогласования);
	Запрос.УстановитьПараметр("СтатусСогласования", СтатусыСогласования_ВозвращеноНаДоработку);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//Утверждения.ПроверитьИстину(НЕ РезультатЗапроса.Пустой(), "Статус для документа установлен СтатусСогласования = ["+СтатусыСогласования_ВозвращеноНаДоработку+"]");
	ТекстТеста = "Статус для документа установлен СтатусСогласования = ["+СтатусыСогласования_ВозвращеноНаДоработку+"]";
	Ожидаем.Что(РезультатЗапроса.Пустой(),ТекстТеста).Не_().ЭтоИстина();
	ОтменитьТранзакцию();
КонецПроцедуры //ТестДолжен_ПровестиРегистрациюСтатусаОбъекта
  //4