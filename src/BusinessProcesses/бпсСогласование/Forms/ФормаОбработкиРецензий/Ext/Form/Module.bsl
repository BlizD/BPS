
&НаКлиенте
Процедура КомандаОтправитьНаПовторноеСогласование(Команда)
	КомандаСогласования = ПредопределенноеЗначение("Перечисление.бпсКомандыСогласования.ОтправитьНаПовторноеСогласование");
	ВыполнитьКомандуНаКлиенте(КомандаСогласования);	
	
	//КомандаОтправитьНаПовторноеСогласованиеНаСервере();
	//Модифицированность = Ложь;
	//Оповестить("ЗадачаФормаСписка_Обновить");	
	//Оповестить("бпсСтатусыСогласований_Обновить");
	//Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуНаКлиенте(КомандаСогласования)
	ВыполнитьЗадачуНаСервере(КомандаСогласования);
	Модифицированность = Ложь;
	Оповестить("ЗадачаФормаСписка_Обновить");	
	Оповестить("бпсСтатусыСогласований_Обновить");
	Закрыть();	
КонецПроцедуры 

&НаСервере
Процедура ВыполнитьЗадачуНаСервере(КомандаСогласования) Экспорт
	БизнесПроцессОбъект = РеквизитФормыВЗначение("Объект"); 
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ЗадачаСсылка",ЗадачаСсылка);
	ДопПараметры.Вставить("КомандаСогласования",КомандаСогласования);
	БизнесПроцессОбъект.ВыполнитьЗадачу(ДопПараметры);
КонецПроцедуры //ВыполнитьЗадачуНаСервере(Истина)

//&НаСервере
//Процедура КомандаОтправитьНаПовторноеСогласованиеНаСервере() Экспорт
//	Объект.ОтправитьНаПовторноеСогласование = Истина;
//	
//	//РезультатПрошлогоСогласования = ""
//	//	+Символы.ПС+"_____________________________________________"
//	//	+Символы.ПС+"Результаты прошлого согласования от "+ТекущаяДата()+": "+Символы.ПС;
//	//	
//	//Для каждого СтрокаЛистСогласования из Объект.ЛистСогласования цикл
//	//	Если СтрокаЛистСогласования.Очередь > Объект.ТекущийНомерОчереди Тогда
//	//		Прервать;
//	//	Конецесли;
//	//	ТекстРезультат = ?(СтрокаЛистСогласования.Согласовано, "согласовано","не согласовано");
//	//	РезультатПрошлогоСогласования = РезультатПрошлогоСогласования 
//	//		+СтрокаЛистСогласования.Очередь+ " "+СтрокаЛистСогласования.РольАдресации 
//	//		+" Рецензия: """+ СтрокаЛистСогласования.Рецензия+""""
//	//		+" Результат: """+ ТекстРезультат+""""
//	//		+Символы.ПС;	
//	//Конеццикла;			
//	//Объект.Пояснение = Объект.Пояснение + РезультатПрошлогоСогласования;	
//	Записать();
//	ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект(); 
//	ЗадачаОбъект.ВыполнитьЗадачу();	
//КонецПроцедуры //КомандаОтправитьНаПовторноеСогласованиеНаСервере()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗадачаСсылка = Параметры.ЗадачаСсылка;
	
	УстановитьОтборДляИсторииРецензий();
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДляИсторииРецензий() Экспорт
	ИсторияРецензий.Параметры.УстановитьЗначениеПараметра("ИсходныйБизнесПроцесс",Объект.Ссылка);
КонецПроцедуры //ИзменитьЭлементОтбораСписка()

&НаКлиенте
Процедура КомандаПрекратитьСогласование(Команда)
	КомандаСогласования = ПредопределенноеЗначение("Перечисление.бпсКомандыСогласования.ПрекратитьСогласование");
	ВыполнитьКомандуНаКлиенте(КомандаСогласования);	
	
	//КомандаПрекратитьСогласованиеНаСервере();
	//Модифицированность = Ложь;
	//Оповестить("ЗадачаФормаСписка_Обновить");	
	//Оповестить("бпсСтатусыСогласований_Обновить");
	//Закрыть();	
КонецПроцедуры

//&НаСервере
//Процедура КомандаПрекратитьСогласованиеНаСервере() 
//	Объект.ОтправитьНаПовторноеСогласование = Ложь;
//	Записать();
//	ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект(); 
//	ЗадачаОбъект.ВыполнитьЗадачу();		
//КонецПроцедуры 

