
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если НЕ ТипЗнч(ВыбраннаяСтрока) = Тип("ЗадачаСсылка.бпсЗадача") тогда
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли;	
	ОбработатьВыборЗадачи(ВыбраннаяСтрока,СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборЗадачи(ЗадачаСсылка,СтандартнаяОбработка) Экспорт
	
	ПараметрыЗадачи = ПолучитьПараметрыЗадачи(ЗадачаСсылка);
	БПСсылка = ПараметрыЗадачи.БизнесПроцесс;

	Если НЕ ЗначениеЗаполнено(БПСсылка) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ЗадачаСсылка);
		ОткрытьФорму("Задача.бпсЗадача.Форма.ФормаЗадачи",ПараметрыФормы);
		Возврат;
	КонецЕсли;
	
	ТочкаМаршрута = ПараметрыЗадачи.ТочкаМаршрута; 
	ТипЗнчБПСсылка = ТипЗнч(БПСсылка);
	Если ТипЗнч(БПСсылка) = Тип("БизнесПроцессСсылка.бпсСогласование") тогда
		СтандартнаяОбработка = Ложь;
		
		ЭтоТочкаМаршрута_СогласоватьСРецензентом = ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.бпсСогласование.ТочкаМаршрута.СогласоватьСРецензентом");
		ЭтоТочкаМаршрута_ОбработатьРезультатыСогласования = ТочкаМаршрута = ПредопределенноеЗначение("БизнесПроцесс.бпсСогласование.ТочкаМаршрута.ОбработатьРезультатыСогласования");
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", БПСсылка);
		ПараметрыФормы.Вставить("ЗадачаСсылка", ЗадачаСсылка);
		Если ЭтоТочкаМаршрута_СогласоватьСРецензентом Тогда
			ИмяФормыБП = "БизнесПроцесс.бпсСогласование.Форма.ФормаРецензента";
		ИначеЕсли ЭтоТочкаМаршрута_ОбработатьРезультатыСогласования Тогда
			ИмяФормыБП = "БизнесПроцесс.бпсСогласование.Форма.ФормаОбработкиРецензий";
		Иначе
			ВызватьИсключение "Ошибка! нет формы для обработки точки маршрута ["+ТочкаМаршрута+"]";
		Конецесли;
		ОткрытьФорму(ИмяФормыБП,ПараметрыФормы); 
		СтандартнаяОбработка = Ложь;			
	Конецесли;	
КонецПроцедуры //ОбработатьВыборЗадачи

&НаСервере
Функция ПолучитьПараметрыЗадачи(ЗадачаСсылка) Экспорт
	#Если Тромбон тогда
		ЗадачаСсылка=Задачи.бпсЗадача.СоздатьЗадачу();
	#Конецесли
	БизнесПроцесс = ЗадачаСсылка.БизнесПроцесс;
	ПараметрыЗадачи = Новый Структура();
	ПараметрыЗадачи.Вставить("БизнесПроцесс",БизнесПроцесс);
	ПараметрыЗадачи.Вставить("ТочкаМаршрута",ЗадачаСсылка.ТочкаМаршрута);
	ПараметрыЗадачи.Вставить("ОбъектБД",БизнесПроцесс.ОбъектБД);
	Возврат ПараметрыЗадачи;
КонецФункции //ПолучитьПараметрыЗадачи()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗадачаФормаСписка_Обновить" Тогда
		Элементы.Список.Обновить();
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьСкрытыеЗадачи(Команда)
	НеПоказыватьСкрытыеЗадачи = НЕ НеПоказыватьСкрытыеЗадачи;
	ЭлементыОтбора = Список.Отбор.Элементы;
	ПараметрОтбораСкрыта = Новый ПолеКомпоновкиДанных("Скрыта");
	КнопкаПоказатьСкрытыеЗадачи = Элементы.ФормаКомандаПоказатьСкрытыеЗадачи;
	Для каждого ЭлементОтбора из ЭлементыОтбора цикл
		Если ЭлементОтбора.ЛевоеЗначение = ПараметрОтбораСкрыта Тогда
			ЭлементОтбора.Использование = НеПоказыватьСкрытыеЗадачи;
		Конецесли;
	Конеццикла;
	Если НеПоказыватьСкрытыеЗадачи Тогда
		КнопкаПоказатьСкрытыеЗадачи.Заголовок = "Показать скрытые задачи";
	Иначе
		КнопкаПоказатьСкрытыеЗадачи.Заголовок = "Не показывать скрытые задачи";
	Конецесли;	
КонецПроцедуры


&НаКлиенте
Процедура КомандаСогласовано(Команда)
	КомандаСогласования = ПредопределенноеЗначение("Перечисление.бпсКомандыСогласования.Согласовано");
	ВыполнитьКомандуНаКлиенте(КомандаСогласования);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуНаКлиенте(КомандаСогласования)
	ВыполнитьЗадачуНаСервере(КомандаСогласования);
	Модифицированность = Ложь;
	Оповестить("ЗадачаФормаСписка_Обновить");	
	Оповестить("бпсСтатусыСогласований_Обновить");
КонецПроцедуры //ВыполнитьКомандуНаКлиенте("Согласовано")

&НаСервере
Процедура КомандаСогласованоНаСервере(КомандаСогласования) Экспорт
	ВыполнитьЗадачуНаСервере(КомандаСогласования);	
КонецПроцедуры //КомандаСогласованоНаСервере()

&НаСервере
Процедура ВыполнитьЗадачуНаСервере(КомандаСогласования) Экспорт
	МассивЗадач = Элементы.Список.ВыделенныеСтроки;
	ТочкаМаршрута_СогласоватьСРецензентом = БизнесПроцессы.бпсСогласование.ТочкиМаршрута.СогласоватьСРецензентом;
	Для каждого ЗадачаСсылка из МассивЗадач цикл
		Если ЗадачаСсылка.ТочкаМаршрута <> ТочкаМаршрута_СогласоватьСРецензентом Тогда			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка! кнопки ""Согласовано/Не согласовано"" доступны только для задач согласования";
			Сообщение.Сообщить();
			Возврат;
		Конецесли;
	Конеццикла;
	
	Для каждого ЗадачаСсылка из МассивЗадач цикл
		БизнесПроцессОбъект = ЗадачаСсылка.БизнесПроцесс.ПолучитьОбъект();		
		ДопПараметры = Новый Структура();
		ДопПараметры.Вставить("ЗадачаСсылка",ЗадачаСсылка);
		ДопПараметры.Вставить("Рецензия",Неопределено);
		ДопПараметры.Вставить("КомандаСогласования",КомандаСогласования);
		БизнесПроцессОбъект.ВыполнитьЗадачу(ДопПараметры);
	Конеццикла;		
КонецПроцедуры //ВыполнитьЗадачуНаСервере(Истина)

&НаКлиенте
Процедура КомандаНеСогласовано(Команда)
	КомандаСогласования = ПредопределенноеЗначение("Перечисление.бпсКомандыСогласования.НеСогласовано");
	ВыполнитьКомандуНаКлиенте(КомандаСогласования);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НеПоказыватьСкрытыеЗадачи = Истина;
	
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь",ПараметрыСеанса.ТекущийПользователь);
	
	ЭлементыОтбора = Список.Отбор.Элементы;
	ПараметрОтбораСкрыта = Новый ПолеКомпоновкиДанных("Скрыта");	
	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.Использование = НеПоказыватьСкрытыеЗадачи;
	ЭлементОтбора.ЛевоеЗначение = ПараметрОтбораСкрыта;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Ложь;
КонецПроцедуры
