Функция ДобавитьСообщение(ДопПараметры) Экспорт
	ИДПользователяТелеграмм = 0;
	Если ДопПараметры.Свойство("АдресЭлектроннойПочтыКому") Тогда
		АдресЭлектроннойПочтыКому = ДопПараметры.АдресЭлектроннойПочтыКому;
	Иначе
		ПользовательДляОтправки = ДопПараметры.ПользовательДляОтправки;
		
		Если НЕ ЗначениеЗаполнено(ПользовательДляОтправки) Тогда
			ТекстОшибки = "Ошибка! Не указан пользователь для отправки уведомления";
			РегистрыСведений.бпсОшибки.ДобавитьОшибку(ТекстОшибки,ПредопределенноеЗначение("Перечисление.бпсТипыОшибок.НеУдалосьОтправитьУведомление"));
			Возврат Неопределено;		
		Конецесли;
		
		НастройкиПользователя = РегистрыСведений.бпсНастройкиПользователей.ПолучитьНастройкиПользователя(ПользовательДляОтправки);
		Если НЕ ЗначениеЗаполнено(НастройкиПользователя) Тогда
			//ВызватьИсключение "Ошибка! не заполнены настройки пользователя ["+ПользовательДляОтправки+"] в регистре сведений бпсНастройкиПользователей";
								
			ТекстОшибки = "ВНИМАНИЕ! не удалось отправить уведомление для пользователя ["+ПользовательДляОтправки+"]. Проверьте настройки пользователя в регистре сведений бпсНастройкиПользователей";
			РегистрыСведений.бпсОшибки.ДобавитьОшибку(ТекстОшибки,ПредопределенноеЗначение("Перечисление.бпсТипыОшибок.НеЗаполненыНастройкиПользователя"));
			Возврат Неопределено;
		КонецЕсли;
		Если НастройкиПользователя.НеУведомлятьОЗадачахПочтой Тогда
			Возврат Неопределено;
		Конецесли;
		АдресЭлектроннойПочтыКому = СокрЛП(НастройкиПользователя.АдресЭлектроннойПочты);
		Если НЕ ЗначениеЗаполнено(АдресЭлектроннойПочтыКому) Тогда
			ТекстОшибки = "ВНИМАНИЕ! не заполнен адрес электронной почты ["+ПользовательДляОтправки+"]. Проверьте настройки пользователя в регистре сведений бпсНастройкиПользователей";
			РегистрыСведений.бпсОшибки.ДобавитьОшибку(ТекстОшибки,ПредопределенноеЗначение("Перечисление.бпсТипыОшибок.НеЗаполненыНастройкиПользователя"));					
			Возврат Неопределено;
		Конецесли;
		ИДПользователяТелеграмм = НастройкиПользователя.ИДПользователяТелеграмм; 
	КонецЕсли;
	
	ИдентификаторСообщения = Строка(Новый УникальныйИдентификатор());
	
	НаборЗаписей = РегистрыСведений.бпсСообщения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);
	Запись = НаборЗаписей.Добавить();
	Запись.ИдентификаторСообщения = ИдентификаторСообщения;
	Запись.Кому = АдресЭлектроннойПочтыКому;
	Запись.Тема = ДопПараметры.Тема;
	
	
	ТекстУведомления = ДопПараметры.Тело;
	
	ПодвалДляПисьма = ПолучитьПодвалДляПисьма();	
	ТекстУведомления = ТекстУведомления + ПодвалДляПисьма;	
	
	Запись.Тело = ТекстУведомления;
	Запись.ДатаСоздания = ТекущаяДата();
	Запись.ОбъектБД = ДопПараметры.ОбъектБД;
	Если ДопПараметры.Свойство("ОтправлятьУведомлениеТелеграмм")
		И ДопПараметры.ОтправлятьУведомлениеТелеграмм = Истина Тогда
		
		Запись.ИДПользователяТелеграмм = ИДПользователяТелеграмм;
	КонецЕсли;	
	НаборЗаписей.Записать();
	
	Возврат ИдентификаторСообщения;
КонецФункции


Функция ПолучитьПодвалДляПисьма() Экспорт 
	ПодвалДляПисьма = " 
		|
		|
		|
		|
		|_____________________________________________________________________
		|
		|Письмо сформировано автоматически. Пожалуйста, не отвечайте на него.
		//|Информация о базе: ["+СтрокаСоединенияИнформационнойБазы()+"]
		|" 
		;	
	Возврат ПодвалДляПисьма;
КонецФункции //ПолучитьПодвалДляПисьма()

Процедура ОтправитьСообщения() Экспорт
	Если НЕ бпсОбщийМодуль.ЭтоРабочаяБаза() Тогда
		Возврат;
	Конецесли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бпсСообщения.ИдентификаторСообщения,
	|	бпсСообщения.Кому,
	|	бпсСообщения.Тема,
	|	бпсСообщения.Тело,
	|	бпсСообщения.ДатаСоздания,
	|	бпсСообщения.ДатаОтправки,
	|	бпсСообщения.КоличествоПопыток
	|ИЗ
	|	РегистрСведений.бпсСообщения КАК бпсСообщения
	|ГДЕ
	|	бпсСообщения.ДатаОтправки = ДАТАВРЕМЯ(1, 1, 1)
	|	И бпсСообщения.КоличествоПопыток < 5";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	Конецесли;
	
	СистемнаяУчетнаяЗаписьЭлектроннойПочты = Справочники.бпсУчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	
	Соединение = бпсОбщийМодуль.УстановитьСоединениеСПочтой(СистемнаяУчетнаяЗаписьЭлектроннойПочты);
	
	Выборка = РезультатЗапроса.Выбрать();
		
	Пока Выборка.Следующий() Цикл
		пИдентификаторСообщения = Выборка.ИдентификаторСообщения;
		ПараметрыПисьма = Новый Структура;
		ПараметрыПисьма.Вставить("Кому", Выборка.Кому);
		ПараметрыПисьма.Вставить("Тело", Выборка.Тело);
		ПараметрыПисьма.Вставить("Тема", Выборка.Тема);
		СообщениеОтправлено = Ложь;
		Попытка
			бпсОбщийМодуль.ОтправитьПочтовоеСообщение(СистемнаяУчетнаяЗаписьЭлектроннойПочты,ПараметрыПисьма,Соединение);	
			СообщениеОтправлено = Истина;
		Исключение
			ТекстОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		
		пПараметрыОтбора = Новый Структура();
		пПараметрыОтбора.Вставить("ИдентификаторСообщения",пИдентификаторСообщения);
		ВыборкабпсСообщения = РегистрыСведений.бпсСообщения.Выбрать(пПараметрыОтбора);
		Пока ВыборкабпсСообщения.Следующий() Цикл
			Запись = ВыборкабпсСообщения.ПолучитьМенеджерЗаписи();
			Запись.Прочитать();
			Если СообщениеОтправлено Тогда
				Запись.ДатаОтправки = ТекущаяДата();
			Иначе
				Запись.КоличествоПопыток = Запись.КоличествоПопыток + 1;
				Запись.ИнформацияООшибке = "" + ТекстОписаниеОшибки;
			Конецесли;
			Запись.Записать();
		Конеццикла;
	КонецЦикла;
КонецПроцедуры //ОтправитьСообщения()
              
Процедура ВыполнитьРассылкуТелеграмм() Экспорт
	
	Если НЕ бпсОбщийМодуль.ЭтоРабочаяБаза() Тогда
		Возврат;
	Конецесли;
	
	ВыполнятьРассылкуТелеграмм = Справочники.бпсКонстанты.ПолучитьЗначениеКонстанты("ВыполнятьРассылкуТелеграмм",
		Тип("Булево"),,Ложь);
	Если ВыполнятьРассылкуТелеграмм <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ТокенТелеграммБота = Справочники.бпсКонстанты.ПолучитьЗначениеКонстанты("ТокенТелеграммБота",
		Тип("Строка"),,Ложь);
	Если Не ЗначениеЗаполнено(ТокенТелеграммБота) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бпсСообщения.ИдентификаторСообщения,
	|	бпсСообщения.Кому,
	|	бпсСообщения.Тема,
	|	бпсСообщения.Тело,
	|	бпсСообщения.ДатаСоздания,
	|	бпсСообщения.ДатаОтправки,
	|	бпсСообщения.КоличествоПопыток,
	|	бпсСообщения.ИДПользователяТелеграмм,
	|	бпсСообщения.ОбъектБД
	|ИЗ
	|	РегистрСведений.бпсСообщения КАК бпсСообщения
	|ГДЕ
	|	бпсСообщения.ДатаОтправкиТелеграмм = ДАТАВРЕМЯ(1, 1, 1)
	|	И бпсСообщения.КоличествоПопытокТелеграмм < 5";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	Конецесли;	
	
	МассивНастроекПроксиСерверов = РегистрыСведений.бпсПроксиСерверы.ПолучитьМассивНастроекПроксиСерверов();
	МассивНастроекПроксиСерверовКоличество = МассивНастроекПроксиСерверов.Количество();
	Если МассивНастроекПроксиСерверовКоличество = 0 Тогда
		Возврат;
	КонецЕсли;
	НомерТекущейНастройкиПрокси = 0;

	АдресПубликации = Справочники.бпсКонстанты.ПолучитьЗначениеКонстанты("АдресПубликации",Тип("Строка"),,Ложь);

	Выборка = РезультатЗапроса.Выбрать();	
	Пока Выборка.Следующий() Цикл
		
		пИдентификаторСообщения = Выборка.ИдентификаторСообщения;
		ТекстСообщения = СтрЗаменить(Выборка.Тело, "#", "");
	    СообщениеОтправлено = Ложь;

		//		Данные = 
		//		"{
		//|""chat_id"":"""+Формат(Выборка.ИДПользователяТелеграмм, "ЧГ=")+""",
		//|""text"":""Текст"",
		//|""reply_markup"": {
		//|    ""inline_keyboard"": [
		//|    [{
		//|  ""text"": ""ОбъектСогласования"",
		//|  ""url"":""http://192.168.13.130/BPS/ru_RU/#e1cib/data/Справочник.бпсПредметыСогласований?ref=838318dbf213445c11e8e41681645d42""
		//|     }]
		//|]
		//|}
		//|} ";

		Структура = Новый Соответствие;
		Структура.Вставить("chat_id",Формат(Выборка.ИДПользователяТелеграмм, "ЧГ="));
		Структура.Вставить("text", ТекстСообщения);
		Массив_reply_markup = Новый Массив;

		Если ЗначениеЗаполнено(Выборка.ОбъектБД)
			И ЗначениеЗаполнено(АдресПубликации) Тогда
			
			Структура_inline_keyboard = Новый Структура;
			Структура_inline_keyboard.Вставить("text", Строка(Выборка.ОбъектБД));
			Структура_inline_keyboard.Вставить("url", АдресПубликации + "#" + ПолучитьНавигационнуюСсылку(Выборка.ОбъектБД));
		                      
			Массив_reply_markup.Добавить(Структура_inline_keyboard);
		КонецЕсли;	
		Массив_inline_keyboard = Новый Массив;
		Массив_inline_keyboard.Добавить(Массив_reply_markup);
		
		Структура_reply_markup = Новый Структура;
		Структура_reply_markup.Вставить("inline_keyboard",Массив_inline_keyboard);
		
		Структура.Вставить("reply_markup", Структура_reply_markup);
		
		ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON;
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
		ЗаписатьJSON(ЗаписьJSON, Структура);
		Данные = ЗаписьJSON.Закрыть();
			
		//Ресурс = "bot" + ТокенБота + "/sendMessage?chat_id=" + Формат(элемПолучатель.ИД, "ЧГ=") + "&text=" + ТекстПисьма+"&disable_web_page_preview=true";
		//Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
		//ЗапросHTTP = Новый HTTPЗапрос(Ресурс);
		//Ответ = Соединение.Получить(ЗапросHTTP);
		
		Ресурс = "bot" + ТокенТелеграммБота + "/sendMessage";
		ЗапросHTTP = Новый HTTPЗапрос(Ресурс);
		ЗапросHTTP.Заголовки.Вставить("Content-type", "application/json");
		ЗапросHTTP.УстановитьТелоИзСтроки(Данные);

		Ответ = Неопределено;
		ВыполнитьЗапросHTTP(Ответ, ЗапросHTTP, МассивНастроекПроксиСерверов, НомерТекущейНастройкиПрокси);
		Если Ответ <> Неопределено И Ответ.КодСостояния = 200 Тогда
			СообщениеОтправлено = Истина;
		Иначе	
			ЗаписьЖурналаРегистрации("Телеграмм.Отправка", УровеньЖурналаРегистрации.Ошибка,,
				, "Не смогли отправить сообщение телеграмм пользователю [" + Выборка.ИДПользователяТелеграмм+"]");
		КонецЕсли;
		
		пПараметрыОтбора = Новый Структура();
		пПараметрыОтбора.Вставить("ИдентификаторСообщения", пИдентификаторСообщения);
		ВыборкабпсСообщения = РегистрыСведений.бпсСообщения.Выбрать(пПараметрыОтбора);
		Пока ВыборкабпсСообщения.Следующий() Цикл
			Запись = ВыборкабпсСообщения.ПолучитьМенеджерЗаписи();
			Запись.Прочитать();
			Если СообщениеОтправлено Тогда
				Запись.ДатаОтправкиТелеграмм = ТекущаяДата();
			Иначе
				Запись.КоличествоПопытокТелеграмм = Запись.КоличествоПопытокТелеграмм + 1;
				Запись.ИнформацияООшибке = Запись.ИнформацияООшибке 
					+ Символы.ПС + ТекущаяДата()
					+ " Не смогли отправить сообщение телеграмм пользователю [" + Выборка.ИДПользователяТелеграмм+"]";
			Конецесли;
			Запись.Записать();
		Конеццикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура ВыполнитьЗапросHTTP(Ответ, ЗапросHTTP, МассивНастроекПроксиСерверов, НомерТекущейНастройкиПрокси)
	
	Ответ = Неопределено;
	Если НомерТекущейНастройкиПрокси >= МассивНастроекПроксиСерверов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПрокси = МассивНастроекПроксиСерверов[НомерТекущейНастройкиПрокси];
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https",НастройкиПрокси.Адрес,НастройкиПрокси.Порт,НастройкиПрокси.Логин,НастройкиПрокси.Пароль,Ложь);

	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
	
	Попытка 
		Ответ = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
		РегистрыСведений.бпсПроксиСерверы.ИзменитьОценкуРаботоспособностиПроксиСервера(НастройкиПрокси.Адрес, НастройкиПрокси.Порт, 1);
		Возврат;
	Исключение
		НомерТекущейНастройкиПрокси = НомерТекущейНастройкиПрокси + 1;
		РегистрыСведений.бпсПроксиСерверы.ИзменитьОценкуРаботоспособностиПроксиСервера(НастройкиПрокси.Адрес, НастройкиПрокси.Порт, -1);
		ВыполнитьЗапросHTTP(Ответ, ЗапросHTTP, МассивНастроекПроксиСерверов, НомерТекущейНастройкиПрокси);	
	КонецПопытки
	
КонецПроцедуры