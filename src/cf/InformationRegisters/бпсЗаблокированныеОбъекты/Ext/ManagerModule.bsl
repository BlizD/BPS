Функция ПроверитьЗаблокированОбъект(СсылкаНаОбъектБД, ДополнительныеСвойства,Отказ) Экспорт 
	Если Отказ Тогда
		Возврат Неопределено;
	Конецесли;
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъектБД) Тогда
		Возврат Неопределено;
	Конецесли;
	
	ОбъектБД = СсылкаНаОбъектБД;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бпсЗаблокированныеОбъекты.ОбъектБД
	|ИЗ
	|	РегистрСведений.бпсЗаблокированныеОбъекты КАК бпсЗаблокированныеОбъекты
	|ГДЕ
	|	бпсЗаблокированныеОбъекты.ОбъектБД = &ОбъектБД";
	
	Запрос.УстановитьПараметр("ОбъектБД", ОбъектБД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
	Конецесли;
КонецФункции //ПроверитьЗаблокированОбъект(Отказ)

Процедура ДобавитьЗапись(ДопПараметры,Отказ) Экспорт
	пОбъектБД = ДопПараметры.ОбъектБД;
	НаборЗаписей=РегистрыСведений.бпсЗаблокированныеОбъекты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектБД.Установить(пОбъектБД);
	Запись=НаборЗаписей.Добавить();
	Запись.ОбъектБД = ДопПараметры.ОбъектБД;
	НаборЗаписей.Записать();
КонецПроцедуры //СформироватьЗаписи(ДопПараметры,Отказ)

Процедура УдалитьЗапись(ДопПараметры,Отказ) Экспорт
	пОбъектБД = ДопПараметры.ОбъектБД;
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("ОбъектБД",пОбъектБД);
	
	Выборка = РегистрыСведений.бпсЗаблокированныеОбъекты.Выбрать(ПараметрыОтбора);
	Пока Выборка.Следующий() Цикл
		Запись = Выборка.ПолучитьМенеджерЗаписи();
		Запись.Удалить();
	Конеццикла;

КонецПроцедуры //СформироватьЗаписи(ДопПараметры,Отказ)