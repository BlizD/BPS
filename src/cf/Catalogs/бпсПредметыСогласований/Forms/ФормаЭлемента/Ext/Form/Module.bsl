&НаСервере
Процедура УстановитьВидимостьДоступность() Экспорт
	
	Элементы.ВключеноРедактирование.Видимость = Ложь;
	
	пИспользуетсяВСогласованиях = Справочники.бпсПредметыСогласований.ИспользуетсяЛиВСогласованиях(Объект.Ссылка);	
	Если пИспользуетсяВСогласованиях Тогда
		Элементы.ВключеноРедактирование.Видимость = Истина;	
		ТолькоПросмотр = Истина;
		Если ВключеноРедактирование Тогда
			
			ТолькоПросмотр = Ложь;						
			ТекстСообщения = "Редактирование разрешено.";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();			
		Иначе			
			ТекстСообщения = "ВНИМАНИЕ! предмет согласования уже используется в согласованиях. "
				+"Редактирование запрещено. Если все равно хотите его изменить, тогда Включите редактирование";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Поле = "ВключеноРедактирование";
			Сообщение.Сообщить();
		Конецесли;
	Конецесли;
	
	Элементы.ПользователиДляУведомления.Видимость = Ложь;
	Элементы.ЗапретитьПроведениеОбъектаБДПокаОнНеСогласован.ТолькоПросмотр = Истина;
	Если НЕ Объект.УпрощеннаяСистемаУведомлений Тогда
		Элементы.ПользователиДляУведомления.Видимость = Истина;		
	Конецесли;
	Если Объект.ТипОбъектаБД.МенеджерОбъекта = "Документы" Тогда
		Элементы.ЗапретитьПроведениеОбъектаБДПокаОнНеСогласован.ТолькоПросмотр = Ложь;
	Конецесли;
КонецПроцедуры //УстановитьВидимостьДоступность()

&НаКлиенте
Процедура ОпределениеЛистаСогласованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекДанные = Элементы.ОпределениеЛистаСогласования.ТекущиеДанные;	
		Если ТекДанные <> Неопределено тогда
			ТекДанные.КлючСтроки = ПолучитьНовыйКлючСтрокиНаСервере();	
		Конецесли;	
		
	Конецесли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНовыйКлючСтрокиНаСервере() Экспорт
	СправочникОбъект = РеквизитФормыВЗначение("Объект"); 
	Возврат СправочникОбъект.ПолучитьНовыйКлючСтроки();
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура УпрощеннаяСистемаУведомленийПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ОпределениеЛистаСогласованияУсловиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    ЗначениеОтбора = Новый Структура("Владелец", Объект.ТипОбъектаБД);	
	ОтборФормыВыбора = Новый Структура("Отбор", ЗначениеОтбора);   
    ФормаВыбора = ПолучитьФорму("Справочник.бпсУсловия.Форма.ФормаВыбора",ОтборФормыВыбора);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	СтрокаОпределениеЛистаСогласования = Элементы.ОпределениеЛистаСогласования.ТекущиеДанные;	
	Если СтрокаОпределениеЛистаСогласования <> Неопределено тогда
		ДополнительныеПараметры.Вставить("СтрокаОпределениеЛистаСогласования", СтрокаОпределениеЛистаСогласования);	
	Конецесли;	
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПриВыбореУсловия", ЭтаФорма, ДополнительныеПараметры);
	
	ФормаВыбора.ОписаниеОповещенияОЗакрытии = ОповещениеОЗакрытии;
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореУсловия(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	Конецесли;
	СтрокаОпределениеЛистаСогласования = ДополнительныеПараметры.СтрокаОпределениеЛистаСогласования;
	СтрокаОпределениеЛистаСогласования.Условие = РезультатЗакрытия;	
	Элементы.ОпределениеЛистаСогласования.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры //ОбработатьДоговорыВзаиморасчетовПриВыборе

&НаКлиенте
Процедура РазрешеноПовторноеСогласованиеПриИзменении(Элемент)	
	Событие_ПриВозвращенииНаДоработку = ПредопределенноеЗначение("Перечисление.бпсСобытия.ПриВозвращенииНаДоработку");
	Если Объект.РазрешеноПовторноеСогласование Тогда
		СтрокаДействия = Объект.Действия.Добавить();
		СтрокаДействия.Событие = Событие_ПриВозвращенииНаДоработку;
		СтрокаДействия.Действие = ПредопределенноеЗначение("Перечисление.бпсДействия.РазблокироватьОбъектБД");
	Иначе
		ПараметрыОтбора=Новый Структура();
		ПараметрыОтбора.Вставить("Событие",Событие_ПриВозвращенииНаДоработку);
		НайденныеСтроки = Объект.Действия.НайтиСтроки(ПараметрыОтбора);
		Для каждого СтрокаНайденныеСтроки из НайденныеСтроки цикл
			Объект.Действия.Удалить(СтрокаНайденныеСтроки);					
		Конеццикла;
	Конецесли;
КонецПроцедуры


&НаКлиенте
Процедура ТипОбъектаБДПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры


&НаКлиенте
Процедура ВключеноРедактированиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура УказатьРазрешенныеРеквизиты(Команда)
	ТекущиеРазрешенныеРеквизиты = Новый Массив;
	Для каждого Стр Из Объект.РазрешенныеРеквизиты Цикл
		ТекущиеРазрешенныеРеквизиты.Добавить(Стр.Реквизит);
	КонецЦикла; 
	
	РазрешенныеРеквизиты = ЗаполнитьСЗРазрешенныеРеквизиты(ТекущиеРазрешенныеРеквизиты,Объект.ТипОбъектаБД);
	
	Оповещение = Новый ОписаниеОповещения("ПослеОтметкиРазрешенныхРеквизитов", ЭтотОбъект);
	
	РазрешенныеРеквизиты.ПоказатьОтметкуЭлементов(Оповещение,"Поставьте отметку у разрешенных реквизитов");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСЗРазрешенныеРеквизиты(ТекущиеРазрешенныеРеквизиты,ТипОбъектаБД)
	
	РазрешенныеРеквизиты = Новый СписокЗначений;
	ОбъектМетаданные = Метаданные[ТипОбъектаБД.МенеджерОбъекта][ТипОбъектаБД.ОбъектБДИмяМетаданных];
	
	Реквизиты = ОбъектМетаданные.СтандартныеРеквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		ИмяРек = "СтандартныйРеквизит."+Реквизит.Имя;
		Пометка = ?(ТекущиеРазрешенныеРеквизиты.Найти(ИмяРек) = Неопределено,Ложь,Истина);
		РазрешенныеРеквизиты.Добавить(ИмяРек,Реквизит.Имя,Пометка);
	КонецЦикла;
	
	Реквизиты = ОбъектМетаданные.Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		ИмяРек = "Реквизит."+Реквизит.Имя;
		Пометка = ?(ТекущиеРазрешенныеРеквизиты.Найти(ИмяРек) = Неопределено,Ложь,Истина);
		РазрешенныеРеквизиты.Добавить(ИмяРек,Реквизит.Имя,Пометка);
	КонецЦикла;
	
	ТабЧасти = ОбъектМетаданные.ТабличныеЧасти;
	Для каждого ТЧ из ТабЧасти цикл
		ИмяРек = "ТабличнаяЧасть."+ТЧ.Имя;
		Пометка = ?(ТекущиеРазрешенныеРеквизиты.Найти(ИмяРек) = Неопределено,Ложь,Истина);
		РазрешенныеРеквизиты.Добавить(ИмяРек,ИмяРек,Пометка);
		
		Реквизиты = ТЧ.Реквизиты;
		Для Каждого Реквизит Из Реквизиты Цикл
			ИмяРек = ТЧ.Имя+"."+Реквизит.Имя;
			Пометка = ?(ТекущиеРазрешенныеРеквизиты.Найти(ИмяРек) = Неопределено,Ложь,Истина);
			РазрешенныеРеквизиты.Добавить(ИмяРек,"    "+ИмяРек,Пометка);
		КонецЦикла;
	КонецЦикла;
	
	Возврат РазрешенныеРеквизиты;
КонецФункции

&НаКлиенте
Процедура ПослеОтметкиРазрешенныхРеквизитов(Список, Параметры) Экспорт

	Если Список <> Неопределено Тогда
		Объект.РазрешенныеРеквизиты.Очистить();
		ЭтаФорма.Модифицированность = Истина;
		
		Для Каждого Элемент Из Список Цикл
			
			Если Элемент.Пометка Тогда
				Стр = Объект.РазрешенныеРеквизиты.Добавить();
				Стр.Реквизит = Элемент.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьДекорациюРазрешенныеРеквизиты();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьДекорациюРазрешенныеРеквизиты();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДекорациюРазрешенныеРеквизиты()
	
	Декорация = Элементы.ДекорацияРазрешенныеРеквизиты;
	
	Если Объект.РазрешенныеРеквизиты.Количество() <> 0 Тогда
		Декорация.Заголовок = "";
		Для каждого Стр Из Объект.РазрешенныеРеквизиты Цикл
			Если Декорация.Заголовок <> "" Тогда
				Декорация.Заголовок = Декорация.Заголовок + ", ";
			КонецЕсли;
			
			Декорация.Заголовок = Декорация.Заголовок +Стр.Реквизит;
		КонецЦикла;
	Иначе
		Декорация.Заголовок = "Разрешенные реквизиты не будут заблокированы в ходе согласования";
	КонецЕсли;
	
КонецПроцедуры
