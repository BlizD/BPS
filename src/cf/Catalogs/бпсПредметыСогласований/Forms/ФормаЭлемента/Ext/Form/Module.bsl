&НаСервере
Процедура УстановитьВидимостьДоступность() Экспорт
	
	Элементы.ВключеноРедактирование.Видимость = Ложь;
	
	пИспользуетсяВСогласованиях = Справочники.бпсПредметыСогласований.ИспользуетсяЛиВСогласованиях(Объект.Ссылка);	
	Если пИспользуетсяВСогласованиях Тогда
		Элементы.ВключеноРедактирование.Видимость = Истина;	
		ТолькоПросмотр = Истина;
		Если ВключеноРедактирование Тогда
			
			ТолькоПросмотр = Ложь;						
			ТекстСообщения = "Редактирование разрешено.";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();			
		Иначе			
			ТекстСообщения = "ВНИМАНИЕ! предмет согласования уже используется в согласованиях. "
				+"Редактирование запрещено. Если все равно хотите его изменить, тогда Включите редактирование";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Поле = "ВключеноРедактирование";
			Сообщение.Сообщить();
		Конецесли;
	Конецесли;
	
	Элементы.ПользователиДляУведомления.Видимость = Ложь;
	Элементы.ЗапретитьПроведениеОбъектаБДПокаОнНеСогласован.ТолькоПросмотр = Истина;
	Если НЕ Объект.УпрощеннаяСистемаУведомлений Тогда
		Элементы.ПользователиДляУведомления.Видимость = Истина;		
	Конецесли;
	Если Объект.ТипОбъектаБД.МенеджерОбъекта = "Документы" Тогда
		Элементы.ЗапретитьПроведениеОбъектаБДПокаОнНеСогласован.ТолькоПросмотр = Ложь;
	Конецесли;
КонецПроцедуры //УстановитьВидимостьДоступность()

&НаКлиенте
Процедура ОпределениеЛистаСогласованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекДанные = Элементы.ОпределениеЛистаСогласования.ТекущиеДанные;	
		Если ТекДанные <> Неопределено тогда
			ТекДанные.КлючСтроки = ПолучитьНовыйКлючСтрокиНаСервере();	
		Конецесли;	
		
	Конецесли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНовыйКлючСтрокиНаСервере() Экспорт
	СправочникОбъект = РеквизитФормыВЗначение("Объект"); 
	Возврат СправочникОбъект.ПолучитьНовыйКлючСтроки();
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура УпрощеннаяСистемаУведомленийПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ОпределениеЛистаСогласованияУсловиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    ЗначениеОтбора = Новый Структура("Владелец", Объект.ТипОбъектаБД);	
	ОтборФормыВыбора = Новый Структура("Отбор", ЗначениеОтбора);   
    ФормаВыбора = ПолучитьФорму("Справочник.бпсУсловия.Форма.ФормаВыбора",ОтборФормыВыбора);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	СтрокаОпределениеЛистаСогласования = Элементы.ОпределениеЛистаСогласования.ТекущиеДанные;	
	Если СтрокаОпределениеЛистаСогласования <> Неопределено тогда
		ДополнительныеПараметры.Вставить("СтрокаОпределениеЛистаСогласования", СтрокаОпределениеЛистаСогласования);	
	Конецесли;	
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПриВыбореУсловия", ЭтаФорма, ДополнительныеПараметры);
	
	ФормаВыбора.ОписаниеОповещенияОЗакрытии = ОповещениеОЗакрытии;
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореУсловия(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	Конецесли;
	СтрокаОпределениеЛистаСогласования = ДополнительныеПараметры.СтрокаОпределениеЛистаСогласования;
	СтрокаОпределениеЛистаСогласования.Условие = РезультатЗакрытия;	
	Элементы.ОпределениеЛистаСогласования.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры //ОбработатьДоговорыВзаиморасчетовПриВыборе

&НаКлиенте
Процедура РазрешеноПовторноеСогласованиеПриИзменении(Элемент)	
	Событие_ПриВозвращенииНаДоработку = ПредопределенноеЗначение("Перечисление.бпсСобытия.ПриВозвращенииНаДоработку");
	Если Объект.РазрешеноПовторноеСогласование Тогда
		СтрокаДействия = Объект.Действия.Добавить();
		СтрокаДействия.Событие = Событие_ПриВозвращенииНаДоработку;
		СтрокаДействия.Действие = ПредопределенноеЗначение("Перечисление.бпсДействия.РазблокироватьОбъектБД");
	Иначе
		ПараметрыОтбора=Новый Структура();
		ПараметрыОтбора.Вставить("Событие",Событие_ПриВозвращенииНаДоработку);
		НайденныеСтроки = Объект.Действия.НайтиСтроки(ПараметрыОтбора);
		Для каждого СтрокаНайденныеСтроки из НайденныеСтроки цикл
			Объект.Действия.Удалить(СтрокаНайденныеСтроки);					
		Конеццикла;
	Конецесли;
КонецПроцедуры


&НаКлиенте
Процедура ТипОбъектаБДПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры


&НаКлиенте
Процедура ВключеноРедактированиеПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

