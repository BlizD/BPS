
Процедура ПриЗаписи(Отказ)
	Если ЗначениеЗаполнено(БизнесПроцесс) Тогда
		СформироватьЗаписиРС_бпсЗадачиПоБизнесПроцессам(Отказ);	
	КонецЕсли;
	
	
	ОтправитьУведомлениеОЗадаче(Отказ);
	
	
	
КонецПроцедуры

Процедура ОтправитьУведомлениеОЗадаче(Отказ) Экспорт
	Если Отказ Тогда
		Возврат;
	Конецесли;
	Если НЕ ДополнительныеСвойства.Свойство("бпсЭтоНовый")
		ИЛИ ДополнительныеСвойства.бпсЭтоНовый = Ложь Тогда
		Возврат;
	Конецесли;
		
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("Пользователь",Пользователь);
	ДопПараметры.Вставить("РольАдресации",РольАдресации);
	ДопПараметры.Вставить("ПодразделениеАдресации",ПодразделениеАдресации);
	ТЗИсполнителейЗадачи = Задачи.бпсЗадача.ПолучитьТЗИсполнителейЗадачи(ДопПараметры);
	
	Если ТЗИсполнителейЗадачи.Количество() = 0 Тогда
		ТекстОшибки = "ВНИМАНИЕ! не удалось определить исполнителей задачи для"
			+" РольАдресации ["+РольАдресации+"]"
			+" ПодразделениеАдресации ["+ПодразделениеАдресации+"]"
			;
		РегистрыСведений.бпсОшибки.ДобавитьОшибку(ТекстОшибки,ПредопределенноеЗначение("Перечисление.бпсТипыОшибок.НеЗаполненРегистрАдресации"));
	Конецесли;
	
	ТЗИсполнителейЗадачи.Свернуть("Пользователь");
	Для каждого СтрокаТЗИсполнителейЗадачи из ТЗИсполнителейЗадачи цикл
		ПользовательДляОтправки = СтрокаТЗИсполнителейЗадачи.Пользователь;		
		
		ТемаУведомления = "В системе 1с Вам поступила задача";
		ТекстУведомления = "Вам поступила задача: "+Наименование+""+Символы.ПС;
		
		ПараметрыПисьма = Новый Структура;
		ПараметрыПисьма.Вставить("ПользовательДляОтправки", ПользовательДляОтправки);
		ПараметрыПисьма.Вставить("Тело", ТекстУведомления);
		ПараметрыПисьма.Вставить("Тема", ТемаУведомления);
		ПараметрыПисьма.Вставить("ОбъектБД", БизнесПроцесс.ОбъектБД);
		ПараметрыПисьма.Вставить("ОтправлятьУведомлениеТелеграмм", Истина);
		
		ИдентификаторСообщения = РегистрыСведений.бпсСообщения.ДобавитьСообщение(ПараметрыПисьма);
			
	Конеццикла;

КонецПроцедуры //ОтправитьУведомлениеОЗадаче(Отказ)

Процедура СформироватьЗаписиРС_бпсЗадачиПоБизнесПроцессам(Отказ) Экспорт	
	Если Отказ Тогда
		Возврат;
	Конецесли;
	бпсЭтоНовый = Неопределено;
	Если ДополнительныеСвойства.Свойство("бпсЭтоНовый") Тогда
		бпсЭтоНовый = ДополнительныеСвойства.бпсЭтоНовый;	
	Конецесли;
	Если НЕ бпсЭтоНовый
		ИЛИ НЕ ЗначениеЗаполнено(бпсЭтоНовый) Тогда
		Возврат;
	Конецесли;
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ЗадачаСсылка",Ссылка);
	
	НаборЗаписей = РегистрыСведений.бпсЗадачиПоБизнесПроцессам.СоздатьНаборЗаписей();
	НаборЗаписей.СформироватьЗаписи(ДопПараметры,Отказ);
КонецПроцедуры 

Процедура ПередЗаписью(Отказ)
	ДополнительныеСвойства.Вставить("бпсЭтоНовый",ЭтоНовый());
	
	Если Выполнена Тогда
		ФактическийИсполнитель = ПараметрыСеанса.ТекущийПользователь;		
		ФактическаяДатаВыполнения = ТекущаяДата();
		ОтложенаДо = Дата(1,1,1);
	Конецесли;
	
	
КонецПроцедуры
