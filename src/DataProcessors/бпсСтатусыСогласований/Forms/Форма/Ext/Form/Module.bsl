
&НаКлиенте
Процедура ТипОбъектаБДПриИзменении(Элемент)
	Список.Отбор.Элементы.Очистить();
	Для каждого ЭлементПользовательскойНастройки из Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы цикл
		Если ТипЗнч(ЭлементПользовательскойНастройки) = Тип("ОтборКомпоновкиДанных") Тогда
			ПользовательскийОтбор = ЭлементПользовательскойНастройки;
			ПользовательскийОтбор.Элементы.Очистить();
		Конецесли;
	Конеццикла;
	Объект.ПредметСогласования = ПолучитьПредметСогласованияНаСервере(Объект.ТипОбъектаБД);	
	ОпределитьЭтоСправочникИерархическийНаКлиенте();
	ОпределитьПараметрыСписка();
	УстановитьВидимостьДоступностьКнопокНаКлиенте();	
КонецПроцедуры

		
&НаСервере
Процедура ОпределитьПараметрыСписка()	
	Если НЕ ЗначениеЗаполнено(Объект.ТипОбъектаБД) Тогда
		Возврат;
	КонецЕсли;	
	Список.ПроизвольныйЗапрос = Истина;
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект"); 
	НастройкиДляСписка = ОбработкаОбъект.ПолучитьНастройкиДляСписка();
	
	Список.ОсновнаяТаблица = НастройкиДляСписка.ОсновнаяТаблица;
	Список.ТекстЗапроса = НастройкиДляСписка.ТекстЗапроса;
	
	пПредметСогласования = Объект.ПредметСогласования;
	
	Список.Параметры.УстановитьЗначениеПараметра("ПредметСогласованияЗаполнен",ЗначениеЗаполнено(пПредметСогласования));	
	Список.Параметры.УстановитьЗначениеПараметра("ПредметСогласования",пПредметСогласования);	
	
	пОбъектБД = Объект.ОбъектБД;
	ИспользоватьОтборПоОбъектуБД = ЗначениеЗаполнено(пОбъектБД);
	Список.Параметры.УстановитьЗначениеПараметра("ОбъектБД",пОбъектБД);	
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоОбъектуБД",ИспользоватьОтборПоОбъектуБД);	
	Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	Если ИспользоватьОтборПоОбъектуБД Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	Конецесли;	
КонецПроцедуры //ОпределитьПараметрыСписка()

&НаСервереБезКонтекста
Функция ПолучитьПредметСогласованияНаСервере(пТипОбъектаБД) Экспорт 
	пПредметСогласования = Неопределено;
	Если НЕ ЗначениеЗаполнено(пТипОбъектаБД) Тогда
		Возврат пПредметСогласования;
	Конецесли;
	пПредметСогласования = Справочники.бпсПредметыСогласований.ПолучитьПредметСогласованияПоТипуОбъекта(пТипОбъектаБД);
	Возврат пПредметСогласования;
КонецФункции //ПолучитьПредметСогласованияНаСервере()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ОбъектБД") Тогда
		Объект.ОбъектБД = Параметры.ОбъектБД;
		Объект.ТипОбъектаБД = Справочники.бпсТипыОбъектовБД.ПолучитьТипОбъектаБД(Объект.ОбъектБД);
		Объект.ПредметСогласования = ПолучитьПредметСогласованияНаСервере(Объект.ТипОбъектаБД);	
	Конецесли;
	ОпределитьПараметрыСписка();
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()	
	Элементы.ОбъектБД.Видимость = Ложь;
	Элементы.ОбъектБД.ТолькоПросмотр = Истина;
	Элементы.ТипОбъектаБД.Видимость = Ложь;
	Элементы.ТипОбъектаБД.ТолькоПросмотр = Истина;
	
	Если ЗначениеЗаполнено(Объект.ОбъектБД) Тогда
		Заголовок = "Статус согласования ["+Объект.ОбъектБД+"]";
		АвтоЗаголовок = Ложь;		
	Иначе
		Элементы.ТипОбъектаБД.Видимость = Истина;
		Элементы.ТипОбъектаБД.ТолькоПросмотр = Ложь;
	Конецесли;
КонецПроцедуры 

&НаКлиенте
Процедура ПредметСогласованияПриИзменении(Элемент)
	ОпределитьПараметрыСписка();
	УстановитьВидимостьДоступностьКнопокНаКлиенте();		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступностьКнопокНаКлиенте() Экспорт
	Элементы.СписокКомандаОтправитьНаСогласование.Доступность = Ложь;	
	Элементы.СписокКомандаОтменитьСогласование.Доступность = Ложь;
	Элементы.СписокКомандаОткрытьПроцессСогласования.Доступность = Ложь;
	Элементы.СписокОбщаяКомандабпсТекущаяЗадачаИИсполнитель.Доступность = Ложь;
	Элементы.СписокОбщаяКомандабпсОтчетЛистСогласования.Доступность = Ложь;
	Элементы.СписокКомандаУстановитьСтатус.Доступность = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.ПредметСогласования) Тогда
		Возврат;
	Конецесли;	
	
	СтрокаСписок = Элементы.Список.ТекущиеДанные;	
	Если СтрокаСписок = Неопределено Тогда	
		Возврат;
	Конецесли;
	
	ТекОбъектЭтоГруппа = Ложь;
	Если ЭтоСправочникИерархический Тогда
		РеквизитыОбъекта = бпсОбщийМодуль.ЗначенияРеквизитовОбъекта(СтрокаСписок.Ссылка, "ЭтоГруппа");
		ТекОбъектЭтоГруппа = РеквизитыОбъекта.ЭтоГруппа;	
	Конецесли;
	Если ТекОбъектЭтоГруппа Тогда
		Возврат;
	Конецесли;
	
	пСогласование = СтрокаСписок.Согласование;
	
	Статус_Утверждено = ПредопределенноеЗначение("Справочник.бпсСтатусыОбъектов.Согласование_Утверждено");
	Статус_ВПроцессеСогласования = ПредопределенноеЗначение("Справочник.бпсСтатусыОбъектов.Согласование_ВПроцессеСогласования");
	Статус_НеУтверждено = ПредопределенноеЗначение("Справочник.бпсСтатусыОбъектов.Согласование_НеУтверждено");
	Статус_Отклонено = ПредопределенноеЗначение("Справочник.бпсСтатусыОбъектов.Согласование_Отклонено");
	Статус_ВозвращеноНаДоработку = ПредопределенноеЗначение("Справочник.бпсСтатусыОбъектов.Согласование_ВозвращеноНаДоработку");
	
	СуществуетСогласование = ЗначениеЗаполнено(пСогласование);
	Если СуществуетСогласование Тогда
		Элементы.СписокКомандаОткрытьПроцессСогласования.Доступность = Истина;
		Элементы.СписокОбщаяКомандабпсТекущаяЗадачаИИсполнитель.Доступность = Истина;
		Элементы.СписокОбщаяКомандабпсОтчетЛистСогласования.Доступность = Истина;
	Конецесли;
	
	//Блок КомандаОтправитьНаСогласование
	Если СтрокаСписок.Статус <> Статус_Утверждено
		И СтрокаСписок.Статус <> Статус_ВозвращеноНаДоработку Тогда
		
		Если НЕ СуществуетСогласование Тогда
			Элементы.СписокКомандаОтправитьНаСогласование.Доступность = Истина;	
		Иначе
			Если СтрокаСписок.Статус = Статус_НеУтверждено
				ИЛИ СтрокаСписок.Статус = Статус_Отклонено Тогда
				Элементы.СписокКомандаОтправитьНаСогласование.Доступность = Истина;	
			Конецесли;				
		Конецесли;
	Конецесли;			
	//Конец блока КомандаОтправитьНаСогласование					
	
	//Блок КомандаОтменитьСогласование
	Если СуществуетСогласование
		И СтрокаСписок.Статус <> Статус_НеУтверждено
		И СтрокаСписок.Статус <> Статус_Отклонено Тогда
		Элементы.СписокКомандаОтменитьСогласование.Доступность = Истина;
	Конецесли;						
	//Конец блока КомандаОтменитьСогласование
	
	Если СтрокаСписок.Статус <> Статус_ВПроцессеСогласования Тогда
		Элементы.СписокКомандаУстановитьСтатус.Доступность = Истина;
	Конецесли;
	
КонецПроцедуры //УстановитьВидимостьДоступность()

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	УстановитьВидимостьДоступностьКнопокНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменитьСогласование(Команда)
	СтрокаСписок = Элементы.Список.ТекущиеДанные;	
	Если СтрокаСписок = Неопределено тогда
	 	Возврат;
	Конецесли;
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ОбъектБД",СтрокаСписок.Ссылка);
	ДопПараметры.Вставить("ПредметСогласования",Объект.ПредметСогласования);
	ДопПараметры.Вставить("Согласование",СтрокаСписок.Согласование);	
	
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	ДополнительныеПараметры.Вставить("ДопПараметры", ДопПараметры);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработкаОтветаОтменитьСогласование", ЭтаФорма, ДополнительныеПараметры);
	
	ПоказатьВопрос(ОповещениеОЗакрытии,"Отменить согласование?",РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаОтменитьСогласование(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		КомандаОтменитьСогласованиеНаСервере(ДополнительныеПараметры.ДопПараметры);
		
		ВыполнитьДействиеПослеКомандыСогласования();
	Конецесли;	
	
КонецПроцедуры 

&НаСервере
Процедура КомандаОтменитьСогласованиеНаСервере(ДопПараметры)
	Обработки.бпсСтатусыСогласований.ОтменитьСогласование(ДопПараметры);	
КонецПроцедуры 

&НаКлиенте
Процедура КомандаОтправитьНаСогласование(Команда)
	СтрокаСписок = Элементы.Список.ТекущиеДанные;	
	Если СтрокаСписок = Неопределено тогда
	 	Возврат;
	Конецесли;
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ОбъектБД",СтрокаСписок.Ссылка);
	ДопПараметры.Вставить("ПредметСогласования",Объект.ПредметСогласования);
	ДопПараметры.Вставить("Согласование",СтрокаСписок.Согласование);
	
	ОтправитьНаСогласованиеНаСервере(ДопПараметры);
	
	ВыполнитьДействиеПослеКомандыСогласования();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеПослеКомандыСогласования()
	Элементы.Список.Обновить();
	УстановитьВидимостьДоступностьКнопокНаКлиенте();
	Оповестить("ЗадачаФормаСписка_Обновить")
КонецПроцедуры 

&НаСервере
Процедура ОтправитьНаСогласованиеНаСервере(ДопПараметры)
	Обработки.бпсСтатусыСогласований.ОтправитьНаСогласование(ДопПараметры);	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОпределитьЭтоСправочникИерархическийНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьЭтоСправочникИерархическийНаКлиенте()
	ЭтоСправочникИерархический = ПолучитьЭтоСправочникИерархическийНаСервере(Объект.ТипОбъектаБД);
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьЭтоСправочникИерархическийНаСервере(ЗНАЧ ТипОбъектаБД) 
	Возврат Справочники.бпсТипыОбъектовБД.ЭтоСправочникИерархический(ТипОбъектаБД);
КонецФункции 

&НаКлиенте
Процедура КомандаОткрытьПроцессСогласования(Команда)
	СтрокаСписок = Элементы.Список.ТекущиеДанные;	
	Если СтрокаСписок = Неопределено тогда
	 	Возврат;
	Конецесли;	
	пСогласование = СтрокаСписок.Согласование;
	Если НЕ ЗначениеЗаполнено(пСогласование) Тогда
		Возврат;
	Конецесли;
	ПараметрыФормы = Новый Структура(); 
	ПараметрыФормы.Вставить("Ключ",пСогласование);
	ОткрытьФорму("БизнесПроцесс.бпсСогласование.Форма.ФормаБизнесПроцесса",ПараметрыФормы);	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "бпсСтатусыСогласований_Обновить" Тогда
		Элементы.Список.Обновить();
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьСтатус(Команда)
	Перем пСтатус;
	СтрокаСписок = Элементы.Список.ТекущиеДанные;	
	Если СтрокаСписок = Неопределено тогда
	 	Возврат;
	Конецесли;	
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ОбъектБД",СтрокаСписок.Ссылка);
	ДопПараметры.Вставить("ПредметСогласования",Объект.ПредметСогласования);
	ДопПараметры.Вставить("Согласование",СтрокаСписок.Согласование);	
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	ДополнительныеПараметры.Вставить("ДопПараметры", ДопПараметры);	
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.бпсСтатусыОбъектов");
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначенияВыборСтатуса", ЭтаФорма , ДополнительныеПараметры);
	ПоказатьВводЗначения(Оповещение,пСтатус, "Укажите статус объекта", ОписаниеТипов);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияВыборСтатуса(пСтатус, ДополнительныеПараметры) Экспорт
    Если пСтатус = Неопределено Тогда
        Возврат;
	КонецЕсли;
	ДопПараметры = ДополнительныеПараметры.ДопПараметры;
	ДопПараметры.Вставить("Статус",пСтатус);
	КомандаУстановитьСтатусНаСервере(ДопПараметры);
	Элементы.Список.Обновить();	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаУстановитьСтатусНаСервере(ДопПараметры)
	Обработки.бпсСтатусыСогласований.УстановитьСтатусВручную(ДопПараметры);
КонецПроцедуры 